{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["Card","children","classes","className","ExpenseItem","expenseDate","expenseTitle","expensePrice","toDateString","ExpensesList","filteredExpenses","length","map","expense","date","title","price","id","NewExpense","onSaveExpenseData","React","useState","displayForm","setDisplayForm","enteredTitle","setEnteredTitle","enteredPrice","setEnteredPrice","Date","toISOString","substring","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","type","min","max","name","value","onChange","target","placeholder","step","onClick","style","marginTop","ExpenseFilter","selected","onSaveFilter","ChartBar","props","barFillHeight","maxValue","Math","round","height","label","Chart","dataPoints","dataPointValues","dataPoint","totalMaximum","ExpensesChart","expenses","chartDataPoints","getMonth","Expenses","addExpenseData","filter","setFilter","getFullYear","toString","enteredExpenseData","random","enteredFilter","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c430e88.chunk.js","sourcesContent":["import './Card.css';\n\nconst Card = ({ children, className }) => {\n  const classes = 'card ' + className;\n  return <section className={classes}>{children}</section>;\n};\n\nexport default Card;\n","import './ExpenseItem.css';\nimport Card from '../UI/Card';\n\nconst ExpenseItem = ({ expenseDate, expenseTitle, expensePrice }) => {\n  return (\n    <Card className='expense-item'>\n      <div className='expense-item__date'>{expenseDate.toDateString()}</div>\n      <div className='expense-item__description'>\n        <h1>{expenseTitle}</h1>\n        <div className='expense-item__price'>${expensePrice}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import React from 'react';\nimport './ExpensesList.css';\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpensesList = ({ filteredExpenses }) => {\n  if (filteredExpenses.length === 0) {\n    return <p className='empty-expenses'>No expenses found.</p>;\n  }\n\n  return (\n    <ul className='expenses-list'>\n      {filteredExpenses.map((expense) => {\n        return (\n          <li key={expense.id}>\n            <ExpenseItem\n              expenseDate={expense.date}\n              expenseTitle={expense.title}\n              expensePrice={expense.price}\n            ></ExpenseItem>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from 'react';\nimport Card from '../UI/Card';\nimport '../Expenses/ExpenseItem.css';\n// import styles from '../NewExpense/NewExpense.module.css';\nimport './NewExpense.css';\n\nconst NewExpense = ({ onSaveExpenseData }) => {\n  const [displayForm, setDisplayForm] = React.useState(false);\n  const [enteredTitle, setEnteredTitle] = React.useState('');\n  const [enteredPrice, setEnteredPrice] = React.useState('');\n  const [enteredDate, setEnteredDate] = React.useState(\n    new Date().toISOString().substring(0, 10)\n  );\n\n  const resetForm = () => {\n    setEnteredTitle('');\n    setEnteredPrice('');\n    setEnteredDate(new Date().toISOString().substring(0, 10));\n  };\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const priceChangeHandler = (event) => {\n    setEnteredPrice(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      price: +enteredPrice,\n      date: new Date(enteredDate),\n    };\n\n    onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredPrice('');\n  };\n\n  return (\n    <Card className='expense-item expense-form'>\n      {displayForm === true ? (\n        <form onSubmit={submitHandler}>\n          <div className='expense-item__date expense-form__date'>\n            <input\n              className='expense-form__date--input'\n              type='date'\n              min='2019-01-01'\n              max='2022-12-31'\n              name='date'\n              value={enteredDate}\n              onChange={dateChangeHandler}\n            />\n          </div>\n          <div className='expense-item__description'>\n            <input\n              className='expense-form__title--input'\n              type='text'\n              name='title'\n              id='title'\n              placeholder='Title'\n              value={enteredTitle}\n              onChange={titleChangeHandler}\n            />\n            <div className='expense-item__price expense-form__price'>\n              <input\n                className='expense-form__price--input'\n                type='number'\n                min='0.01'\n                max='99999'\n                step='0.01'\n                name='price'\n                placeholder='0.01'\n                value={enteredPrice}\n                onChange={priceChangeHandler}\n              />\n              USD\n            </div>\n          </div>\n          <div className='flex-centerize'>\n            <button\n              className='btn'\n              type='button'\n              onClick={() => {\n                setDisplayForm(false);\n                resetForm();\n              }}\n            >\n              Cancel\n            </button>\n            <button className='btn' type='submit'>\n              Add Expense\n            </button>\n          </div>\n        </form>\n      ) : (\n        <div className='flex-centerize'>\n          <button\n            style={{ marginTop: '1rem' }}\n            className='btn'\n            onClick={() => setDisplayForm(true)}\n          >\n            Add New Expense\n          </button>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\nimport Card from '../UI/Card';\nimport './ExpenseFilter.css';\n\nconst ExpenseFilter = ({ selected, onSaveFilter }) => {\n  //   const [filteredYear, setFilteredYear] = React.useState('');\n\n  const onSaveFilterHandler = (event) => {\n    // setFilteredYear(event.target.value);\n    // onSaveFilter(filteredYear);\n\n    onSaveFilter(event.target.value);\n  };\n\n  return (\n    <Card className='filter-box'>\n      <div>\n        <h2>Filter by year</h2>\n        <select onChange={onSaveFilterHandler} value={selected}>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n      <div></div>\n    </Card>\n  );\n};\n\nexport default ExpenseFilter;\n","import React from 'react';\n\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from 'react';\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = ({ dataPoints }) => {\n  const dataPointValues = dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className='chart'>\n      {dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        ></ChartBar>\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from '../Chart/Chart';\n\nconst ExpensesChart = ({ expenses }) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.price;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React from 'react';\n\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesList from './ExpensesList';\nimport NewExpense from '../NewExpense/NewExpense';\nimport ExpenseFilter from './ExpenseFilter';\nimport ExpensesChart from './ExpensesChart';\n\nconst Expenses = ({ expenses, addExpenseData }) => {\n  const [filter, setFilter] = React.useState('2020');\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = { ...enteredExpenseData, id: Math.random().toString() };\n\n    addExpenseData(expenseData);\n  };\n\n  const saveExpenseFilterHandler = (enteredFilter) => {\n    setFilter(enteredFilter);\n  };\n\n  let filteredExpenses = expenses.filter(\n    (expense) => expense.date.getFullYear().toString() === filter\n  );\n\n  return (\n    <Card className='expenses'>\n      <NewExpense onSaveExpenseData={saveExpenseDataHandler}></NewExpense>\n      <ExpenseFilter\n        selected={filter}\n        onSaveFilter={saveExpenseFilterHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <hr />\n\n      <ExpensesList filteredExpenses={filteredExpenses} />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import './App.css';\nimport React from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\n\nconst App = () => {\n  const [expenses, setExpenses] = React.useState([\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      price: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', title: 'New TV', price: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      price: 294.6,\n      date: new Date(2021, 2, 28),\n    },\n  ]);\n\n  const addExpenseHandler = (expenseData) => {\n    setExpenses((prevExpenses) => [...prevExpenses, expenseData]);\n  };\n\n  return (\n    <>\n      <h1 className='top-heading'>Expenses Tracker</h1>\n      <Expenses\n        expenses={expenses}\n        addExpenseData={addExpenseHandler}\n      ></Expenses>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}